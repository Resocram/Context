{"version":3,"sources":["widelogo.png","Components/Definition.js","Components/LaTeX.js","Components/Example.js","Components/Body.js","Components/Note.js","Context/Context.js","Components/Tooltip.js","Components/Link.js","Components/Text.js","Parser/parse.js","App.js","Parser/constants.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Definition","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","props","bl","input","Component","LaTeX","alt","eqn","src","black","border","Example","LaTeX_LaTeX","Body","findLinkWords","definedWords","Note","_this","id","inputArray","map","val","index","Definition_Definition","length","Body_Body","trim","Example_Example","Context","defArray","examples","i","definition","push","Tooltip","context","getKey","getDef","getExamples","example","style","paddingLeft","paddingTop","Link","href","Tooltip_Tooltip","Text","rawInput","result","wordArray","split","goodIntegers","c","toLowerCase","indexOf","j","Link_Link","wordHolder","charHolder","charAt","collapseOrNaw","currentSize","document","getElementsByClassName","item","width","right","App","call","state","str","title","_this2","require","height","onClick","setState","getElementById","target","left","rbEnd","components","Text_Text","slice","Note_Note","parse","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.160da5b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/widelogo.0eb2a0be.png\";","import React, { Component } from 'react';\nimport './Components.css';\n\nexport class Definition extends Component {\n    render() {\n        return (\n            <div className={this.props.bl?\"definition black\":\"definition white\"}>\n                {this.props.input}\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './Components.css';\n\nconst bString = \"http://latex.codecogs.com/svg.latex?\\\\color{white}\\\\pagecolor{black}\";\nconst wString = \"http://latex.codecogs.com/svg.latex?\";\n\nexport class LaTeX extends Component {\n\n\n    render() {\n        return (\n\n                <img \n                alt={this.props.eqn}\n                src={this.props.black?(bString+this.props.eqn):(wString+this.props.eqn)} border=\"0\"></img>\n\n        );\n    }\n}","import React, { Component } from 'react';\nimport { LaTeX } from './LaTeX';\nimport './Components.css';\n\nexport class Example extends Component {\n    render() {\n        return (\n            <div className={this.props.bl?\"example black\":\"example white\"}>\n                <LaTeX eqn={this.props.input} black={this.props.bl}></LaTeX>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { findLinkWords } from './../Parser/parse';\nimport './Components.css';\n\nexport class Body extends Component {\n    render() {\n        return (\n            <div className={this.props.bl?\"body black\":\"body white\"}>\n                {findLinkWords(this.props.input, this.props.definedWords, this.props.bl)}\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Definition } from './Definition';\nimport { Example } from './Example';\nimport { Body } from './Body';\nimport './Components.css';\n\nexport class Note extends Component {\n    render() {\n        return (\n            <div id={this.props.inputArray[0]} className={this.props.bl?\"note black\":\"note white\"}>\n                {this.props.inputArray.map((val, index) => {\n                        if (index === 0) {\n                            return null;\n                        } else if (index === 1) {\n                            return <Definition input={val} definedWords={this.props.definedWords}  bl={this.props.bl}/>;\n                        } else if (index === this.props.inputArray.length - 1) {\n                            return <Body input={val.trim()} definedWords={this.props.definedWords} bl={this.props.bl}/>; //trim away start and end white space\n                        } else {\n                            return <Example input={val} definedWords={this.props.definedWords} bl={this.props.bl}/>;\n                        }\n                    })}\n            </div>\n        );\n    }\n}","export class Context {\n\n    constructor(defArray){\n        this.examples = [];\n        for (let i = 0; i < defArray.length-1; i++){\n            if (i === 0) {\n                this.key = defArray[0];\n            } else if (i === 1){\n                this.definition = defArray[1];\n            } else {\n                this.examples.push(defArray[i])\n            }\n        }\n    }\n\n    getKey(){\n        return this.key;\n    }\n\n    getDef(){\n        return this.definition;\n    }\n\n    getExamples(){ //returns an array of example strings\n        return this.examples;\n    }\n\n}","import React, { Component } from 'react';\nimport { LaTeX } from './LaTeX';\nimport './Components.css';\n\n// given this.props.context, a Context object\n// return a tooltip, which shows stuff based on the context object\n// position it close to where the mouse is\nexport class Tooltip extends Component {\n    render() {\n        return (\n            <div className={this.props.bl?\"tooltip black\":\"tooltip white\"}>\n                <h2 className=\"key\">{this.props.context.getKey()}</h2>\n                <p className=\"def\"><b>Definition:</b> {this.props.context.getDef()}</p>\n                <p className=\"examples\">\n                    <div>\n                        <b>Examples:</b>\n                    </div>\n                    {this.props.context.getExamples().map(example => \n                        <div style={{paddingLeft:10, paddingTop:5}}><LaTeX eqn={example} black={!this.props.bl}/></div>\n                    )}\n                </p>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Tooltip } from './Tooltip';\n\n// given this.props.context, a Context object\n// and this.props.input,\n// return a span, which shows a tooltip on hover\n// and on click sends you to that location\nexport class Link extends Component {\n    render() {\n        return (\n            <span>\n                <a href={\"#\"+this.props.context.getKey()} className={this.props.bl?\"link black\":\"link white\"}>\n                    {this.props.input}\n                </a>\n                <Tooltip context={this.props.context} bl={this.props.bl} />\n            </span>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { findLinkWords } from './../Parser/parse';\nimport './Components.css';\n\nexport class Text extends Component {\n    render() {\n        return (\n            <div className={this.props.bl?\"text black\":\"text white\"}>\n                {findLinkWords(this.props.input, this.props.definedWords, this.props.bl)}\n            </div>\n        );\n    }\n}","import { DL, LB, RB } from './constants';\nimport { Note } from './../Components/Note';\nimport React from 'react';\nimport { Context } from './../Context/Context';\nimport { Link } from '../Components/Link';\n//import { Body } from '../Components/Body';\nimport { Text } from '../Components/Text';\n\n\n// returns the components to display\n// generates \nexport const parse = (rawInput, definedWords, bl) => {\n    let components = [];\n    let left;\n    let rbEnd; //marks end of bracket\n    for (let i = 0; i < rawInput.length; i++) {\n        if (rawInput[i] === LB) {\n            left = i;\n            //once left bracket is encountered, collect everything before this and after rbEnd. make that a body\n            components.push(\n                <Text\n                    input={rawInput.slice(rbEnd+1, i).trim()} //trim away start and end white space\n                    definedWords={definedWords}\n                    bl={bl}\n                />\n            );\n        } else if (rawInput[i] === RB) {\n            // array of string, should put into constructor\n            components.push(\n                <Note\n                    inputArray={rawInput.slice(left + 1, i).split(DL)}\n                    definedWords={definedWords}\n                    bl={bl}\n                />\n            );  \n            rbEnd = i;\n        }\n        if (i === rawInput.length-1){ //push again for the very last stuff\n            components.push(\n                <Text\n                    input={rawInput.slice(rbEnd+1, i).trim()} //trim away start and end white space\n                    definedWords={definedWords}\n                    bl={bl}\n                />\n            );\n        }\n    }\n    return components;\n};\n\nexport const definedWords = (rawInput) => {\n    let definedWords = [];\n    let left;\n    for (let i = 0; i < rawInput.length; i++) {\n        if (rawInput[i] === LB) {\n            left = i;\n        } else if (rawInput[i] === RB) {\n            // array of string, should put into constructor\n            definedWords.push(\n                new Context(rawInput.slice(left + 1, i).split(DL))\n            );  \n        }\n    }\n    return definedWords;\n}\n\nexport function findLinkWords(rawInput, definedWords, bl){\n    let result = [];\n    let wordArray = rawInput.split(\" \");\n    let goodIntegers = [];\n    for (let i = 0; i < wordArray.length; i++){\n        for(let c = 0; c < definedWords.length; c++){\n            if(definedWords[c].getKey().toLowerCase().trim() === wordArray[i].toLowerCase().trim()){\n                goodIntegers.push(i);\n            }\n        }\n    }\n    for (let i = 0; i < wordArray.length; i++) {\n        if (goodIntegers.indexOf(i) > -1) {\n            let context;\n            for (let j = 0; j < definedWords.length; j++) {\n                if (definedWords[j].getKey().toLowerCase().trim() === wordArray[i].toLowerCase().trim()) {\n                    context = definedWords[j];\n                    break;\n                }\n            }\n            result.push(\n                <Link input={wordArray[i]} context={context} bl={bl}></Link>\n            );\n            result.push(' ');\n        } else {\n            let wordHolder = wordArray[i];\n            //check if contains line break, replace line break with html <br/>\n            for(let i=0; i < wordHolder.length; i++){\n                let charHolder = wordHolder.charAt(i);\n                if(charHolder === \"\\n\"){\n                    result.push(<br/>);\n                }else{\n                    result.push(charHolder);\n                }\n            }\n            //restore space between words\n            result.push(' ');\n        }\n    }\n    return result;\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { parse, definedWords } from './Parser/parse';\n\nlet testString = \n`\nThese are my notes for UBC calculus courses! I wrote them using the web application \"context\". Context allows users to create definitions, assign examples, and then quickly view the definitions and examples of defined terms. \n\n<Derivative|\nThe derivative of a function of a real variable measures the sensitivity to change of the function value (output value) with respect to a change in its argument (input value).|\n\\\\frac{d}{dx}\\\\sin x = \\\\cos x|\n\\\\frac{d}{dx}(3x^2+2)=6x|\nHow do you calculate a derivative in calculus?>\n\nFor example, I can hover over derivative because it has been previously defined.\n\n<Vector|\nVectors are used to describe quantities with a magnitude (length) and a direction.|\nA = [0,0,2]|\nB = [9, 20, 1]|\nA vector doesn't intrinsically have a position, although we can assign it one in context.>\n\n<scalar-multiplication|\nMultiplying a vector a by a scalar s results in a vector with length s times the length of a. The new vector sa points in the same direction if s is positive, and in the opposite direction if s is negative.|\nA = 2[0,0,2]|\nB = 5[9, 20, 1]|\nIf the length of a vector is 1 unit, then the length of 2a is 2. What is the length of -1a: is it 1, or -1?.>`\n;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      str: '',\n      bl: true\n    };\n  }\n\n  componentDidMount(){\n    document.title = \"Context App\"\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <section id=\"TOOLBAR\">\n          <ul>\n            <img src={require(\"./widelogo.png\")} alt=\"Our logo\" height=\"40\" width=\"160\"></img>\n            <li>\n              <button className=\"buttoncompile\" onClick={() => this.setState({str: document.getElementById(\"txtarea\").value})}><span>compile</span></button>\n              <button className=\"buttonviews\" onClick={collapseOrNaw}><span>switch view</span></button>\n              <a href=\"./Guide.html\" target=\"_blank\"><button className=\"buttonnormal\"><span>how to use</span></button></a>\n              <button className=\"buttonnormal\" onClick={()=>this.setState({bl: !this.state.bl})}><span>toggle theme</span></button>\n            </li>\n          </ul>\n        </section>\n\n        <section id=\"EDITOR_AND_OUTPUT\">\n\n          <div className=\"split left\">\n            <textarea id=\"txtarea\">{testString}</textarea> \n          </div>\n\n          <div className={this.state.bl?\"split right black\":\"split right white\"}>\n            {parse(this.state.str, definedWords(this.state.str), this.state.bl)}\n          </div>\n\n        </section>\n\n      </div>\n      \n    );\n  }\n}\n\n\n//you can collapse the left hand side now\nfunction collapseOrNaw(){\n  var currentSize = document.getElementsByClassName(\"split right\").item(0).style.width;\n  if(currentSize === \"50%\" || currentSize === \"\"){\n    document.getElementsByClassName(\"split right\").item(0).style.width = \"75%\";\n    document.getElementsByClassName(\"split left\").item(0).style.width = \"0\";\n    document.getElementsByClassName(\"split right\").item(0).style.right = \"12.5%\";\n  }else if(currentSize === \"75%\"){\n    document.getElementsByClassName(\"split right\").item(0).style.width = \"50%\";\n    document.getElementsByClassName(\"split left\").item(0).style.width = \"50%\";\n    document.getElementsByClassName(\"split right\").item(0).style.right = \"0\";\n  }\n}\n\n\n\nexport default App;\n\n","export const DL = '|';\nexport const LB = '<';\nexport const RB = '>';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}